import os, glob
import SCons.Defaults

# import root environment
Import( ["buildenv", "installer"])
myenv = buildenv.Clone()
# get all the sourcefiles recursively
cpps = myenv.SGlob("*.cc", excludedirs=["test"], recursive=True )
# need this to go to the root dir, as SConsript asumes to be in the
# build dir
rootdir = myenv.Dir("#").abspath
libname = myenv["PACKAGE"]


# build static lib
slib =  myenv.StaticLibrary(target = libname, source = [cpps])
myenv.Alias("static", slib)
myenv.Clean("static", slib)

dlib =  myenv.SharedLibrary(target = libname, source = cpps)
myenv.Alias("shared", dlib)
myenv.Default("shared")
myenv.Clean("shared", dlib)

if "shared" in BUILD_TARGETS:
    installer.AddLibrary(dlib)
if "static" in BUILD_TARGETS:
    installer.AddLibrary(slib)

testenv = myenv.Clone()
# gather test files
# SGlob works in build dir, so only for cc files
tests = testenv.SGlob("test/*.py")
tests += testenv.SGlob("*/test/*.py")
# point to tests local includes
testenv.PrependUnique(LIBPATH=[testenv["BUILDDIR"]])
# allow either linking against shared or static, static if both present
testenv.PrependUnique(LIBS=dlib)
for t in tests:
    testenv.addAssayTest(t)

# install headers, only works with absolute dir.
installer.AddHeaders( os.path.join(rootdir,"pyrap"), "*.h", "pyrap", True )
installer.AddHeaders( os.path.join(rootdir,"pyrap"), "*.tcc", "pyrap", True )
